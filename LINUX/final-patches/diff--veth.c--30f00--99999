diff --git a/veth.c b/veth.c
index b4a10bc..d7f0596 100644
--- a/veth.c
+++ b/veth.c
@@ -37,6 +37,10 @@ struct veth_priv {
 	atomic64_t		dropped;
 };
 
+#if defined(CONFIG_NETMAP) || defined(CONFIG_NETMAP_MODULE)
+#include <veth_netmap.h>
+#endif
+
 /*
  * ethtool interface
  */
@@ -206,6 +210,9 @@ static int veth_open(struct net_device *dev)
 		netif_carrier_on(dev);
 		netif_carrier_on(peer);
 	}
+#ifdef DEV_NETMAP
+	netmap_enable_all_rings(dev);
+#endif /* DEV_NETMAP */
 	return 0;
 }
 
@@ -214,6 +221,9 @@ static int veth_close(struct net_device *dev)
 	struct veth_priv *priv = netdev_priv(dev);
 	struct net_device *peer = rtnl_dereference(priv->peer);
 
+#ifdef DEV_NETMAP
+	netmap_disable_all_rings(dev);
+#endif /* DEV_NETMAP */
 	netif_carrier_off(dev);
 	if (peer)
 		netif_carrier_off(peer);
@@ -239,11 +249,17 @@ static int veth_dev_init(struct net_device *dev)
 	dev->vstats = netdev_alloc_pcpu_stats(struct pcpu_vstats);
 	if (!dev->vstats)
 		return -ENOMEM;
+#ifdef DEV_NETMAP
+	veth_netmap_attach(dev);
+#endif /* DEV_NETMAP */
 	return 0;
 }
 
 static void veth_dev_free(struct net_device *dev)
 {
+#ifdef DEV_NETMAP
+	netmap_detach(dev);
+#endif /* DEV_NETMAP */
 	free_percpu(dev->vstats);
 	free_netdev(dev);
 }
